(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{"0Uvp":function(l,n){l.exports='<form clrForm>\n    <clr-input-container>\n        <label>Field 1 label</label>\n        <input clrInput type="text" [(ngModel)]="model" name="example" required />\n        <clr-control-helper>Helper text that shows while it is pristine and valid</clr-control-helper>\n        <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error>\n    </clr-input-container>\n</form>'},"2ASZ":function(l,n){l.exports='<form clrForm [formGroup]="exampleForm">\n    <clr-input-container>\n        <label>Field 1 label</label>\n        <input clrInput type="text" formControlName="sample" />\n        <clr-control-helper>Helper text that shows while it is pristine and valid</clr-control-helper>\n        <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error>\n    </clr-input-container>\n</form>'},"8FRH":function(l,n){l.exports='<form clrForm clrLayout="horizontal">\n    ... form controls\n</form>'},"9UzD":function(l,n){l.exports='<form class="clr-form"></form> // Vertical, class not necessary\n<form class="clr-form clr-form-horizontal"></form> // Horizontal\n<form class="clr-form clr-form-compact"></form> // Compact'},Hrx9:function(l,n){l.exports='<form class="clr-form">\n    <div class="clr-form-control">\n        <label for="example" class="clr-control-label">Label</label>\n        <div class="clr-control-container">\n            <div class="clr-input-wrapper">\n                <input type="text" id="example" placeholder="Example Input" class="clr-input">\n                <clr-icon class="clr-validate-icon" shape="exclamation-circle"></clr-icon>\n            </div>\n            <span class="clr-subtext">Helper Text</span>\n        </div>\n    </div>\n</form>'},IlAM:function(l,n){l.exports="<form clrForm>\n    ... form controls\n</form>"},WGtB:function(l,n){l.exports='<form class="clr-form clr-form-compact">\n    <div class="clr-form-control clr-row">\n        <label for="example" class="clr-control-label clr-col-xs-12 clr-col-md-2">Label</label>\n        <div class="clr-control-container clr-col-xs-12 clr-col-md-10">\n            <div class="clr-input-wrapper">\n                <input type="text" id="example" placeholder="Example Input" class="clr-input">\n                <clr-icon class="clr-validate-icon" shape="exclamation-circle"></clr-icon>\n            </div>\n            <span class="clr-subtext">Helper Text</span>\n        </div>\n    </div>\n</form>'},WQoF:function(l,n){l.exports="import { ClarityModule, ClrFormsNextModule } from '@clr/angular';\n\n@NgModule({\n    imports: [\n        ClarityModule,\n        ClrFormsNextModule,\n        // ... other imports\n    ],\n})\nexport class AppModule { }"},XIy8:function(l,n,u){"use strict";u.r(n);var e=u("CcnG"),r=function(){},a=u("zl1X"),o=u("+Xo0"),t=u("0G9f"),c=u("KZfJ"),i=u("QkwE"),s=u("vAyd"),d=u("mrSG"),p=u("N+3j"),m=u("lzo3"),b=u("e0Qs"),h=u("WGtB"),f=u("9UzD"),g=u("Hrx9"),M=u("pSHR"),y=u("IlAM"),v=u("0Uvp"),x=u("8FRH"),w=u("WQoF"),U=u("Z+lk"),F=u("2ASZ"),L=u("vuOX"),I=function(l){function n(){var n=l.call(this,"forms")||this;return n.uiErrors=m,n.uiForm=b,n.uiGrid=h,n.uiLayouts=f,n.uiStructure=g,n.ngErrors=M,n.ngForm=y,n.ngHelpers=v,n.ngLayouts=x,n.ngModule=w,n.ngReactiveTs=U,n.ngReactiveHtml=F,n.ngStructure=L,n}return Object(d.b)(n,l),n}(p.a),C=e.Ka({encapsulation:2,styles:[],data:{}});function T(l){return e.gb(0,[(l()(),e.Ma(0,0,null,null,150,"clr-doc-wrapper",[],[[2,"dox-wrapper",null]],null,null,o.b,o.a)),e.La(1,49152,null,0,t.a,[],{title:[0,"title"],newLayout:[1,"newLayout"],ui:[2,"ui"],ng:[3,"ng"]},null),(l()(),e.Ma(2,0,null,0,148,"article",[],null,null,null,null,null)),(l()(),e.Ma(3,0,null,null,1,"h5",[["class","component-summary"],["id","a-form-is-a-structured-layout-of-related-input-components"]],null,null,null,null,null)),(l()(),e.eb(-1,null,[" Forms are a grouping of input controls that allow a user to submit information to your application. "])),(l()(),e.Ma(5,0,null,null,10,"div",[["class","alert alert-info"]],null,null,null,null,null)),(l()(),e.Ma(6,0,null,null,9,"div",[["class","alert-items"]],null,null,null,null,null)),(l()(),e.Ma(7,0,null,null,8,"div",[["class","alert-item static"]],null,null,null,null,null)),(l()(),e.Ma(8,0,null,null,2,"div",[["class","alert-icon-wrapper"]],null,null,null,null,null)),(l()(),e.Ma(9,0,null,null,1,"clr-icon",[["class","alert-icon"],["shape","info-circle"]],null,null,null,null,null)),e.La(10,16384,null,0,c.Ba,[],null,null),(l()(),e.Ma(11,0,null,null,4,"span",[["class","alert-text"]],null,null,null,null,null)),(l()(),e.eb(-1,null,[" The forms documentation here describes the new forms introduced in version 0.12. The old forms are still available, but deprecated for removal in version 2.0. To see the old grid documentation, go to "])),(l()(),e.Ma(13,0,null,null,1,"a",[["href","/clarity/documentation/v0.11/forms/"]],null,null,null,null,null)),(l()(),e.eb(-1,null,["0.11 forms documentation"])),(l()(),e.eb(-1,null,[". "])),(l()(),e.Ma(16,0,null,null,1,"h2",[["id","forms-code-samples"]],null,null,null,null,null)),(l()(),e.eb(-1,null,["Forms with CSS"])),(l()(),e.Ma(18,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["If you want to use just the HTML/CSS for building your own form controls, this section describes how to use them. If you are interested in how to use it with Angular, please jump to the Angular section."])),(l()(),e.Ma(20,0,null,null,1,"h4",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Basic form"])),(l()(),e.Ma(22,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["A Clarity form first must include the "])),(l()(),e.Ma(24,0,null,null,1,"code",[["class","clr-code"]],null,null,null,null,null)),(l()(),e.eb(-1,null,[".clr-form"])),(l()(),e.eb(-1,null,[" class, typically on the form element itself."])),(l()(),e.Ma(27,0,null,null,1,"clr-code-snippet",[],null,null,null,i.b,i.a)),e.La(28,4243456,null,0,s.a,[],{code:[0,"code"]},null),(l()(),e.Ma(29,0,null,null,1,"h4",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Layout options"])),(l()(),e.Ma(31,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Forms support three layout options, vertical (default), horizontal, and compact. You can change the layout by simply applying an additional class to the form."])),(l()(),e.Ma(33,0,null,null,1,"clr-code-snippet",[],null,null,null,i.b,i.a)),e.La(34,4243456,null,0,s.a,[],{code:[0,"code"]},null),(l()(),e.Ma(35,0,null,null,1,"h4",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Basic structure"])),(l()(),e.Ma(37,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Each control that you add inside has a similar structure, and they are each covered in their own documentation. However, the general structure is like this for a normal text input."])),(l()(),e.Ma(39,0,null,null,1,"clr-code-snippet",[],null,null,null,i.b,i.a)),e.La(40,4243456,null,0,s.a,[],{code:[0,"code"]},null),(l()(),e.Ma(41,0,null,null,1,"h4",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Layouts with grid"])),(l()(),e.Ma(43,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["If you choose to use a layout other than vertical, you should also provide the corresponding grid classes to allow the form layout to dynamically switch to vertical for narrow width devices. Excluding this may cause experience issues with mobile or narrow widths."])),(l()(),e.Ma(45,0,null,null,1,"clr-code-snippet",[],null,null,null,i.b,i.a)),e.La(46,4243456,null,0,s.a,[],{code:[0,"code"]},null),(l()(),e.Ma(47,0,null,null,1,"h4",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Error state"])),(l()(),e.Ma(49,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["For error states, you simply need to add the "])),(l()(),e.Ma(51,0,null,null,1,"code",[["class","clr-code"]],null,null,null,null,null)),(l()(),e.eb(-1,null,["clr-error"])),(l()(),e.eb(-1,null,[" class to the "])),(l()(),e.Ma(54,0,null,null,1,"code",[["class","clr-code"]],null,null,null,null,null)),(l()(),e.eb(-1,null,["clr-control-container"])),(l()(),e.eb(-1,null,[" element. This will automatically display the error icon, turn the input outline to red, and change the color of the subtext to red. It is recommend that you change the content of the subtext for error messages, but that is up to the application to manage."])),(l()(),e.Ma(57,0,null,null,1,"clr-code-snippet",[],null,null,null,i.b,i.a)),e.La(58,4243456,null,0,s.a,[],{code:[0,"code"]},null),(l()(),e.Ma(59,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["View documentation for each form control to get specifics on their HTML structure."])),(l()(),e.Ma(61,0,null,null,1,"h2",[["id","forms-using-angular"]],null,null,null,null,null)),(l()(),e.eb(-1,null,["Forms Using Angular"])),(l()(),e.Ma(63,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Clarity has created a set of directives to help manage forms with minimal effort by developers. The structure is more condensed and easier to implement, so it is the recommended approach to use the following if you are using Angular. More form controls are being added regularly."])),(l()(),e.Ma(65,0,null,null,13,"div",[["class","alert alert-info"]],null,null,null,null,null)),(l()(),e.Ma(66,0,null,null,12,"div",[["class","alert-items"]],null,null,null,null,null)),(l()(),e.Ma(67,0,null,null,11,"div",[["class","alert-item static"]],null,null,null,null,null)),(l()(),e.Ma(68,0,null,null,2,"div",[["class","alert-icon-wrapper"]],null,null,null,null,null)),(l()(),e.Ma(69,0,null,null,1,"clr-icon",[["class","alert-icon"],["shape","info-circle"]],null,null,null,null,null)),e.La(70,16384,null,0,c.Ba,[],null,null),(l()(),e.Ma(71,0,null,null,7,"span",[["class","alert-text"]],null,null,null,null,null)),(l()(),e.eb(-1,null,[" The forms features described here are not part of the main "])),(l()(),e.Ma(73,0,null,null,1,"code",[["class","clr-code"]],null,null,null,null,null)),(l()(),e.eb(-1,null,["ClarityModule"])),(l()(),e.eb(-1,null,[" in this release. You have to opt into them by including the additional "])),(l()(),e.Ma(76,0,null,null,1,"code",[["class","clr-code"]],null,null,null,null,null)),(l()(),e.eb(-1,null,["ClrFormsNextModule"])),(l()(),e.eb(-1,null,[" in your module imports. "])),(l()(),e.Ma(79,0,null,null,3,"h4",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Include "])),(l()(),e.Ma(81,0,null,null,1,"code",[["class","clr-code"]],null,null,null,null,null)),(l()(),e.eb(-1,null,["ClrFormsNextModule"])),(l()(),e.Ma(83,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["The new forms are opt-in right now, since they are not fully ready for use yet. In order to use it, begin by importing the "])),(l()(),e.Ma(85,0,null,null,1,"code",[["class","clr-code"]],null,null,null,null,null)),(l()(),e.eb(-1,null,["ClrFormsNextModule"])),(l()(),e.eb(-1,null,[" and adding it to your module imports."])),(l()(),e.Ma(88,0,null,null,1,"clr-code-snippet",[["clrLanguage","typescript"]],null,null,null,i.b,i.a)),e.La(89,4243456,null,0,s.a,[],{code:[0,"code"],language:[1,"language"]},null),(l()(),e.Ma(90,0,null,null,1,"h4",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Basic form"])),(l()(),e.Ma(92,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Then declare a form start by adding the "])),(l()(),e.Ma(94,0,null,null,1,"code",[["class","clr-code"]],null,null,null,null,null)),(l()(),e.eb(-1,null,["clrForm"])),(l()(),e.eb(-1,null,[" directive to the form element. This will wire up some internals to manage the form itself."])),(l()(),e.Ma(97,0,null,null,1,"clr-code-snippet",[],null,null,null,i.b,i.a)),e.La(98,4243456,null,0,s.a,[],{code:[0,"code"]},null),(l()(),e.Ma(99,0,null,null,1,"h4",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Layout options"])),(l()(),e.Ma(101,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["If you wish to have a different layout, then you can use the "])),(l()(),e.Ma(103,0,null,null,1,"code",[["class","clr-code"]],null,null,null,null,null)),(l()(),e.eb(-1,null,["clrLayout"])),(l()(),e.eb(-1,null,[" directive to set the desired layout. The appropriate grid classes will be applied to enable automatic layout switching for mobile viewports."])),(l()(),e.Ma(106,0,null,null,1,"clr-code-snippet",[],null,null,null,i.b,i.a)),e.La(107,4243456,null,0,s.a,[],{code:[0,"code"]},null),(l()(),e.Ma(108,0,null,null,1,"h4",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Basic structure"])),(l()(),e.Ma(110,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["When you start to fill in your form controls, each will should be wrapped in a container like you see here in this text input example."])),(l()(),e.Ma(112,0,null,null,1,"clr-code-snippet",[],null,null,null,i.b,i.a)),e.La(113,4243456,null,0,s.a,[],{code:[0,"code"]},null),(l()(),e.Ma(114,0,null,null,1,"h4",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Helper and validation messages"])),(l()(),e.Ma(116,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["These Angular components also support built in helper text and validation with error messages. "])),(l()(),e.Ma(118,0,null,null,1,"clr-code-snippet",[],null,null,null,i.b,i.a)),e.La(119,4243456,null,0,s.a,[],{code:[0,"code"]},null),(l()(),e.Ma(120,0,null,null,1,"h4",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Multiple error messages"])),(l()(),e.Ma(122,0,null,null,7,"p",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["If you want to support multiple error messages, you can do this by defining an error message for each scenario using "])),(l()(),e.Ma(124,0,null,null,1,"code",[["class","clr-code"]],null,null,null,null,null)),(l()(),e.eb(-1,null,["clrIfError"])),(l()(),e.eb(-1,null,[". It is recommended that you create an error message for each validatior you specify. Use the validator name provided in the binding for "])),(l()(),e.Ma(127,0,null,null,1,"code",[["class","clr-code"]],null,null,null,null,null)),(l()(),e.eb(-1,null,["*clrIfError=\"'errorName'\""])),(l()(),e.eb(-1,null,[", which might be your custom validator or a built in Angular one."])),(l()(),e.Ma(130,0,null,null,1,"clr-code-snippet",[],null,null,null,i.b,i.a)),e.La(131,4243456,null,0,s.a,[],{code:[0,"code"]},null),(l()(),e.Ma(132,0,null,null,1,"h4",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Reactive Forms"])),(l()(),e.Ma(134,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),e.eb(-1,null,["Forms also work with reactive forms with the same support for validations."])),(l()(),e.Ma(136,0,null,null,1,"clr-code-snippet",[["clrLanguage","typescript"]],null,null,null,i.b,i.a)),e.La(137,4243456,null,0,s.a,[],{code:[0,"code"],language:[1,"language"]},null),(l()(),e.Ma(138,0,null,null,1,"clr-code-snippet",[],null,null,null,i.b,i.a)),e.La(139,4243456,null,0,s.a,[],{code:[0,"code"]},null),(l()(),e.Ma(140,0,null,null,10,"div",[["id","design-guidelines"]],null,null,null,null,null)),(l()(),e.Ma(141,0,null,null,1,"h3",[["id","guidelines"]],null,null,null,null,null)),(l()(),e.eb(-1,null,["Design Guidelines"])),(l()(),e.Ma(143,0,null,null,7,"div",[["class","alert alert-info"]],null,null,null,null,null)),(l()(),e.Ma(144,0,null,null,6,"div",[["class","alert-items"]],null,null,null,null,null)),(l()(),e.Ma(145,0,null,null,5,"div",[["class","alert-item static"]],null,null,null,null,null)),(l()(),e.Ma(146,0,null,null,2,"div",[["class","alert-icon-wrapper"]],null,null,null,null,null)),(l()(),e.Ma(147,0,null,null,1,"clr-icon",[["class","alert-icon"],["shape","info-circle"]],null,null,null,null,null)),e.La(148,16384,null,0,c.Ba,[],null,null),(l()(),e.Ma(149,0,null,null,1,"span",[["class","alert-text"]],null,null,null,null,null)),(l()(),e.eb(-1,null,[" The UX design guidelines documentation is currently a work in progress, and will be updated when they are ready. "]))],function(l,n){var u=n.component;l(n,1,0,u.title,u.newLayout,u.ui,u.ng),l(n,28,0,u.uiForm),l(n,34,0,u.uiLayouts),l(n,40,0,u.uiStructure),l(n,46,0,u.uiGrid),l(n,58,0,u.uiGrid),l(n,89,0,u.ngModule,"typescript"),l(n,98,0,u.ngForm),l(n,107,0,u.ngLayouts),l(n,113,0,u.ngStructure),l(n,119,0,u.ngHelpers),l(n,131,0,u.ngErrors),l(n,137,0,u.ngReactiveTs,"typescript"),l(n,139,0,u.ngReactiveHtml)},function(l,n){l(n,0,0,!0)})}var H=e.Ia("clr-forms-demo",I,function(l){return e.gb(0,[(l()(),e.Ma(0,0,null,null,1,"clr-forms-demo",[],[[2,"content-area",null],[2,"dox-content-panel",null]],null,null,T,C)),e.La(1,49152,null,0,I,[],null,null)],null,function(l,n){l(n,0,0,!0,!0)})},{},{},[]),E=u("Ip0R"),A=u("gIcY"),G=u("ZYCi"),N=u("XPsC"),z=u("JsA7");u.d(n,"FormsDemoModuleNgFactory",function(){return R});var R=e.Ja(r,[],function(l){return e.Ta([e.Ua(512,e.j,e.Z,[[8,[a.yb,a.b,a.xb,H]],[3,e.j],e.v]),e.Ua(4608,E.p,E.o,[e.s,[2,E.G]]),e.Ua(4608,c.Xb,c.Xb,[]),e.Ua(4608,A.z,A.z,[]),e.Ua(5120,c.Uc,c.Vc,[[3,c.Uc]]),e.Ua(1073742336,E.b,E.b,[]),e.Ua(1073742336,c.Ca,c.Ca,[]),e.Ua(1073742336,c.Yb,c.Yb,[]),e.Ua(1073742336,c.td,c.td,[]),e.Ua(1073742336,c.U,c.U,[]),e.Ua(1073742336,c.d,c.d,[]),e.Ua(1073742336,c.W,c.W,[]),e.Ua(1073742336,c.n,c.n,[]),e.Ua(1073742336,c.zd,c.zd,[]),e.Ua(1073742336,c.Bd,c.Bd,[]),e.Ua(1073742336,c.N,c.N,[]),e.Ua(1073742336,c.Y,c.Y,[]),e.Ua(1073742336,A.w,A.w,[]),e.Ua(1073742336,A.j,A.j,[]),e.Ua(1073742336,c.Oa,c.Oa,[]),e.Ua(1073742336,c.cc,c.cc,[]),e.Ua(1073742336,c.Mc,c.Mc,[]),e.Ua(1073742336,c.F,c.F,[]),e.Ua(1073742336,c.kb,c.kb,[]),e.Ua(1073742336,c.Ab,c.Ab,[]),e.Ua(1073742336,c.u,c.u,[]),e.Ua(1073742336,c.Ta,c.Ta,[]),e.Ua(1073742336,c.Na,c.Na,[]),e.Ua(1073742336,c.i,c.i,[]),e.Ua(1073742336,c.j,c.j,[]),e.Ua(1073742336,c.lb,c.lb,[]),e.Ua(1073742336,c.q,c.q,[]),e.Ua(1073742336,c.Ra,c.Ra,[]),e.Ua(1073742336,c.Wa,c.Wa,[]),e.Ua(1073742336,c.Wc,c.Wc,[]),e.Ua(1073742336,c.rb,c.rb,[]),e.Ua(1073742336,c.Gb,c.Gb,[]),e.Ua(1073742336,c.Ka,c.Ka,[]),e.Ua(1073742336,c.cb,c.cb,[]),e.Ua(1073742336,c.xb,c.xb,[]),e.Ua(1073742336,c.Xa,c.Xa,[]),e.Ua(1073742336,c.Lb,c.Lb,[]),e.Ua(1073742336,c.a,c.a,[]),e.Ua(1073742336,G.o,G.o,[[2,G.t],[2,G.l]]),e.Ua(1073742336,N.a,N.a,[]),e.Ua(1073742336,z.a,z.a,[]),e.Ua(1073742336,r,r,[]),e.Ua(1024,G.j,function(){return[[{path:"",component:I}]]},[])])})},"Z+lk":function(l,n){l.exports='import {Component} from "@angular/core";\nimport {FormGroup, FormControl, Validators} from "@angular/forms";\n\n@Component({\n    //...\n})\nexport class ReactiveFormsDemo {\n    exampleForm = new FormGroup({\n        sample: new FormControl(\'\', Validators.required),\n    });\n}'},e0Qs:function(l,n){l.exports='<form class="clr-form">\n    ... form controls inside\n</form>'},lzo3:function(l,n){l.exports='<form class="clr-form">\n    <div class="clr-form-control">\n        <label for="example" class="clr-control-label">Label</label>\n        <div class="clr-control-container clr-error">\n            <div class="clr-input-wrapper">\n                <input type="text" id="example" placeholder="Example Input" class="clr-input">\n                <clr-icon class="clr-validate-icon" shape="exclamation-circle"></clr-icon>\n            </div>\n            <span class="clr-subtext">Error message</span>\n        </div>\n    </div>\n</form>'},pSHR:function(l,n){l.exports='<form clrForm>\n    <clr-input-container>\n        <label>Field 1 label</label>\n        <input clrInput type="text" [(ngModel)]="model" name="example" required minlength="5" />\n        <clr-control-helper>Helper text that shows while it is pristine and valid</clr-control-helper>\n        <clr-control-error *clrIfError="\'required\'">Error message about being required</clr-control-error>\n        <clr-control-error *clrIfError="\'minLength\'">Error message about requiring 5 characters</clr-control-error>\n    </clr-input-container>\n</form>'},vuOX:function(l,n){l.exports='<form clrForm>\n    <clr-input-container>\n        <label>Field 1 label</label>\n        <input clrInput type="text" [(ngModel)]="model" name="example" />\n    </clr-input-container>\n    <clr-input-container>\n        <label>Field 2 label</label>\n        <input clrInput type="text" [(ngModel)]="model" name="example" />\n    </clr-input-container>\n</form>'}}]);